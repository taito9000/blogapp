// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

model User {
  id          Int       @id @default(autoincrement())
  user_name   String    @db.VarChar(50)
  email       String    @unique @db.VarChar(100)
  password    String    @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  articles    Article[] @relation("createdUser")
  updates     Article[] @relation("updatedUser")
  roles       Role[]

  @@map("users")
}

model Permission {
  id              Int           @id @default(autoincrement())
  permission_name String        @unique @db.VarChar(50)
  explanation     String        @db.VarChar(255)
  created_at      DateTime      @default(now())
  roles           Role[]        @relation("RolePermissions")

  @@map("permissions")
}

model Role {
  id             Int         @id @default(autoincrement())
  user_id        Int
  permission_id  Int
  created_at     DateTime    @default(now())
  user           User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  permission     Permission  @relation(name: "RolePermissions", fields: [permission_id], references: [id])

  @@unique([user_id])
  @@map("roles")
}
  
model Article {
  id           Int       @id @default(autoincrement())
  title        String    @db.VarChar(255)
  content      String
  image_url    String?   @db.VarChar(255)
  created_user Int
  created_at   DateTime  @default(now())
  updated_user Int?
  updated_at   DateTime  @default(now()) @updatedAt
  createdBy    User      @relation("createdUser", fields: [created_user], references: [id])
  updatedBy    User?      @relation("updatedUser", fields: [updated_user], references: [id])

  @@map("articles")
}
